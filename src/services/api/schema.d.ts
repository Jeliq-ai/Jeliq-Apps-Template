/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export type paths = Record<string, never>;
export type webhooks = Record<string, never>;
export type components = {
  schemas: {
    /** @description Error information. */
    Error: {
      /** @description Unique code identifying the error. */
      code: string;
      /** @description Conditions that were met to trigger the error. */
      conditions?: Record<string, never>;
      /** @description Brief message about the error. */
      message: string;
      details?: components['schemas']['ErrorDetails'];
    } & {
      [key: string]: unknown;
    };
    /** @description Detailed information about the error. */
    ErrorDetails: {
      [key: string]: components['schemas']['Error'];
    };
  };
  responses: {
    /** @description The JSON format is invalid or a validation error occurred. */
    Error400: {
      headers: {
        [name: string]: unknown;
      };
      content: {
        'application/json': components['schemas']['Error'];
      };
    };
    /** @description There was a login error or the access token is invalid. */
    Error401: {
      headers: {
        [name: string]: unknown;
      };
      content: {
        'application/json': components['schemas']['Error'];
      };
    };
    /** @description The application ID or key is not specified, the application could not be found, there was an attempt to access unauthorized content, the requested operation permissions were not granted, or the resource is read-only. */
    Error403: {
      headers: {
        [name: string]: unknown;
      };
      content: {
        'application/json': components['schemas']['Error'];
      };
    };
    /** @description The specified instance, resource, or content could not be found. */
    Error404: {
      headers: {
        [name: string]: unknown;
      };
      content: {
        'application/json': components['schemas']['Error'];
      };
    };
    /** @description The requested HTTP method is not allowed. */
    Error405: {
      headers: {
        [name: string]: unknown;
      };
      content: {
        'application/json': components['schemas']['Error'];
      };
    };
    /** @description The request header's Content-Type is not 'application/json' or 'multipart/form-data'. */
    Error415: {
      headers: {
        [name: string]: unknown;
      };
      content: {
        'application/json': components['schemas']['Error'];
      };
    };
    /** @description An internal server error occurred. */
    Error500: {
      headers: {
        [name: string]: unknown;
      };
      content: {
        'application/json': components['schemas']['Error'];
      };
    };
  };
  parameters: {
    /** @description Authentication token */
    Authentication: string;
    /** @description A query parameter for specifying the order of the results. */
    SearchOrder: string;
    /** @description A query parameter for search keywords. */
    SearchKeywords: string;
    /** @description A query parameter for specifying the page number of the results. */
    SearchPage: number;
    /** @description A query parameter for specifying the maximum number of results per page. */
    SearchLimit: number;
    /** @description A query parameter for specifying the sorting order of the results (ascending or descending). */
    SearchAsc: boolean;
  };
  requestBodies: never;
  headers: never;
  pathItems: never;
};
export type $defs = Record<string, never>;
export type operations = Record<string, never>;
